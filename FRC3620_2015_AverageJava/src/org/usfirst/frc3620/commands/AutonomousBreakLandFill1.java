// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3620.commands;
import org.usfirst.frc3620.Robot;

import edu.wpi.first.wpilibj.command.CommandGroup;

/**
 *
 */
public class AutonomousBreakLandFill1 extends CommandGroup {
    
    public  AutonomousBreakLandFill1() {
    	/**
    	 * Go to landfill
    	 * Drag totes out with arm attachment
    	 * Timeout is in case the robot stops before reaching the distance
    	 */
    	addSequential(new AutoMove(2, 1), 3); //move into landfill. Timeout after 3 seconds in case robot runs into landfill early
    	addSequential(new autoLiftTo(4)); //grab tote with hook thing
    	addSequential(new AutoMove(-3, 1)); // back up with totes
    	addSequential(new AutonomousTurn(-90)); // turn 90 degrees left
    	addSequential(new autoLiftTo(0)); // release totes from hook
    	addSequential(new AutoMove(-3,1), 3); // back up to get in position for more totes
    	addSequential(new AutonomousTurn(90)); // turn back to face totes
    	addSequential(new AutoMove(3,1), 3); //move into landfill. Timeout after 3 seconds
    	addSequential(new autoLiftTo(4)); //grab totes with hook thing
    	addSequential(new AutoMove(-3,1), 3); // backup with totes
    	addSequential(new AutonomousTurn(-90)); // turn totes 90 degrees
    	addSequential(new autoLiftTo(0));
    	
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
    }

	@Override
	protected void initialize()
	{
		System.out.println("Auto Landfill break 1 start");
		Robot.commandInitialized(this);
		super.initialize();
	}

	@Override
	protected void end()
	{
		System.out.println("Auto Landfill break 1 end");
		Robot.commandEnded(this);
		super.end();
	}

	@Override
	protected void interrupted()
	{
		System.out.println("Auto Landfill break 1 interrupted");
		Robot.commandInterrupted(this);
		super.interrupted();
	}
}
