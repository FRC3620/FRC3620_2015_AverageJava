// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3620.commands;

import edu.wpi.first.wpilibj.PIDController;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc3620.Robot;
import org.usfirst.frc3620.UDPReciever;
import org.usfirst.frc3620.VisionData;

/**
 *
 */
public class  AutonomousToteFinder extends Command implements PIDSource, PIDOutput {

	 double p = 1.0;
     double i = 0;
     double d = 0;
     double sideStick;
     
 PIDController pidToteFinder = new PIDController(p,i,d,this,this);
	
    public AutonomousToteFinder() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drive);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    
       
        pidToteFinder.setOutputRange(-.50, 0.50);
       
    }

    // Called just before this Command runs the first time
    protected void initialize() {
   	 System.out.println("ToteFinder start");
    	 pidToteFinder.enable();

    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Robot.drive.setDrive(0, sideStick);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	 pidToteFinder.disable();
    	 Robot.drive.turnMotorsOff();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
    
    public void pidWrite(double output)
	{
		// TODO Auto-generated method stub
    	sideStick = output; 
    	SmartDashboard.putNumber("sidestick: ", sideStick);
	}

	@Override
	public double pidGet()
	{
		// TODO Auto-generated method stub
		//double target = 2*( UDPReciever.visionData.getX()/UDPReciever.visionData.getImageWidth())-1;
		double target = -0.5;
		SmartDashboard.putNumber("Target", target);
		return target;
	}
    
}
